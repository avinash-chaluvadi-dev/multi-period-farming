"""empty message

Revision ID: c19be1bb41be
Revises: 
Create Date: 2023-06-11 20:32:59.249943

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "c19be1bb41be"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "primary_keys",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("time_periods", sa.Integer(), nullable=True),
        sa.Column("total_land_area_available", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_primary_keys_id"), "primary_keys", ["id"], unique=False)
    op.create_table(
        "general_info",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("produce", sa.String(), nullable=True),
        sa.Column("primary_key_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["primary_key_id"],
            ["primary_keys.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_general_info_id"), "general_info", ["id"], unique=False)
    op.create_table(
        "period_info",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("time_period", sa.Integer(), nullable=True),
        sa.Column("inventory_holding_cost", sa.Float(), nullable=True),
        sa.Column("water_available_in_litres", sa.Integer(), nullable=True),
        sa.Column("water_cost_per_litre", sa.Float(), nullable=True),
        sa.Column("available_man_hours", sa.Integer(), nullable=True),
        sa.Column("labour_cost_per_man_hour", sa.Float(), nullable=True),
        sa.Column("fertilizer_cost_per_kg", sa.Integer(), nullable=True),
        sa.Column("energy_cost_per_unit", sa.Integer(), nullable=True),
        sa.Column("fertilizer_required_per_acre", sa.Integer(), nullable=True),
        sa.Column("primary_key_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["primary_key_id"],
            ["primary_keys.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_period_info_id"), "period_info", ["id"], unique=False)
    op.create_table(
        "produce_info",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("produce", sa.String(), nullable=True),
        sa.Column("time_to_harvest", sa.Integer(), nullable=True),
        sa.Column("lead_time_to_purchase", sa.Integer(), nullable=True),
        sa.Column("man_hours_required_per_acre", sa.Float(), nullable=True),
        sa.Column("fraction_lost_per_period", sa.Float(), nullable=True),
        sa.Column("primary_key_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["primary_key_id"],
            ["primary_keys.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_produce_info_id"), "produce_info", ["id"], unique=False)
    op.create_index(
        op.f("ix_produce_info_primary_key_id"),
        "produce_info",
        ["primary_key_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_produce_info_primary_key_id"), table_name="produce_info")
    op.drop_index(op.f("ix_produce_info_id"), table_name="produce_info")
    op.drop_table("produce_info")
    op.drop_index(op.f("ix_period_info_id"), table_name="period_info")
    op.drop_table("period_info")
    op.drop_index(op.f("ix_general_info_id"), table_name="general_info")
    op.drop_table("general_info")
    op.drop_index(op.f("ix_primary_keys_id"), table_name="primary_keys")
    op.drop_table("primary_keys")
    # ### end Alembic commands ###
